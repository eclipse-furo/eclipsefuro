// Code generated by furo furo. DO NOT EDIT.

syntax = "proto3";
package helloworld;
option go_package = "{{.RepositoryName}}/dist/pb/helloworld;helloworldpb";
option java_multiple_files = true;
option java_outer_classname = "HelloworldserviceProto";
option java_package = "com.example.tutorial.helloworld";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "helloworld/helloworld.proto";
import "helloworld/reqmsgs.proto";


// The greeting service definition.
service Greeter {

  // Sends a pure grpc greeting.
  rpc AAAASayHello (helloworld.Request) returns (helloworld.Reply){

  }

  // Sends a greeting.
  rpc SayHelloRESTGreeter (SayHelloRESTGreeterFuroRequest) returns (helloworld.Reply){
	//SayHelloREST: POST /api/hi * , helloworld.Reply #Sends a greeting.
    option (google.api.http) = {
        post: "/api/hi"
        body: "*"
    };

  }

  // Sends a greeting.
  rpc SayHiRESTGreeter (SayHiRESTGreeterFuroRequest) returns (helloworld.Reply){
	//SayHiREST: GET /api/hi google.protobuf.Empty , helloworld.Reply #Sends a greeting.
    option (google.api.http) = {
        get: "/api/hi"
        
    };

  }

}


