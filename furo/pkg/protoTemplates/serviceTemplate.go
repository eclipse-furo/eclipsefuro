package protoTemplates

var ServiceTemplate = `// Code generated by furo furo. DO NOT EDIT.

syntax = "proto3";{{$GenAdditionalBinding := .GenAdditionalBinding}}
package {{.Package}};
{{- range $key, $option := .Options}}
option {{$key}} = {{if  ($option | eq "true")}}{{$option}};{{else}}"{{$option}}";{{end}}{{end}}
{{range $import := .Imports}}
import "{{$import}}";{{end}}
{{range $Service := .Services}}
{{$serviceName := camelcase (snakecase $Service.Name)}}
{{if $Service.Description}}// {{$Service.Description | replace "\n" "\n// "}}{{end}}
service {{$serviceName}} { 
{{- $rpcmap := $Service.Services | rpcmap}}
{{range $rpckey, $method := $rpcmap}}
  {{if $method.Description}}// {{$method.Description | replace "\n" "\n// " | noescape}}{{end}}
  rpc {{$method.RpcName}} ({{$method | rpcRequest}}) returns ({{$method.Data.Response}}){
{{- if $method.Deeplink.Href}}
	{{if $method.Deeplink.Description}}  //{{$method.Deeplink.Description | replace "\n" "\n// "}}{{else}}// developer was to lazy to describe the rpc, sorry{{end}}
    option (google.api.http) = {
{{- if or (eq $method.Deeplink.Method "POST") (eq $method.Deeplink.Method "DELETE") (eq $method.Deeplink.Method "GET") (eq $method.Deeplink.Method "PATCH") (eq $method.Deeplink.Method "PUT")}}
      {{ lower $method.Deeplink.Method}}: "{{$method.Deeplink.Href}}"
{{else}}
      custom: {kind:"{{ lower $method.Deeplink.Method}}", path:"{{$method.Deeplink.Href}}"}
{{end}}{{- if $method.Data.Request}}
      {{- if or (eq $method.Deeplink.Method "POST") (eq $method.Deeplink.Method "PATCH") (eq $method.Deeplink.Method "PUT")}}      body: "{{$method.Data.Bodyfield}}"{{end}}{{end}}
        {{- if and (eq $method.Deeplink.Method "PUT") (eq $GenAdditionalBinding true)  }}
        additional_bindings {
            patch: "{{$method.Deeplink.Href}}"
            body: "{{$method.Data.Bodyfield}}"
        }{{end}}
    };
{{- end}}

  }
{{end}}
}
{{end}}

`
